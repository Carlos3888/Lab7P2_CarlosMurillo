/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab7p2_carlosmurillo;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Jafeth
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    DefaultListModel modelopersonas =  new DefaultListModel();
    DefaultTreeModel modeloarbol;
    
    private File archivop = null;
    
    public Principal() {
        initComponents();
        
        
        
        System.out.println();
        
        System.out.println("Lista de zombies: ");
        Administrador az = new Administrador("./Zombies2.txt");        
        az.cargarArchivoZombies();
        
        try {
            metodoarbol();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo_rango = new javax.swing.ButtonGroup();
        grupo_tipo_planta = new javax.swing.ButtonGroup();
        grupo_tipo_zombie = new javax.swing.ButtonGroup();
        popup = new javax.swing.JPopupMenu();
        Imprimir = new javax.swing.JMenuItem();
        Eliminar = new javax.swing.JMenuItem();
        Elegir = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        arbol = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        batalla = new javax.swing.JTextArea();
        b_testear = new javax.swing.JButton();
        t_planta = new javax.swing.JTextField();
        t_zombie = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        b_bajo = new javax.swing.JRadioButton();
        b_medio = new javax.swing.JRadioButton();
        b_alto = new javax.swing.JRadioButton();
        b_explosiva = new javax.swing.JRadioButton();
        b_disparo = new javax.swing.JRadioButton();
        b_defensa = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        t_p_nombre = new javax.swing.JTextField();
        s_p_ataque = new javax.swing.JSpinner();
        s_p_vida = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        s_p_magnitud = new javax.swing.JSpinner();
        s_p_altura = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        t_p_n_proyectil = new javax.swing.JTextField();
        t_p_color = new javax.swing.JTextField();
        s_p_peso = new javax.swing.JSpinner();
        s_p_dureza = new javax.swing.JSpinner();
        b_crear_planta = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        t_z_nombre = new javax.swing.JTextField();
        s_z_edad = new javax.swing.JSpinner();
        s_z_enojo = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        s_z_ataque = new javax.swing.JSpinner();
        s_z_tamano = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        s_z_vida = new javax.swing.JSpinner();
        s_z_experiencia = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        t_z_persona = new javax.swing.JTextField();
        b_mas = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        lista_personas = new javax.swing.JList<>();
        jLabel20 = new javax.swing.JLabel();
        b_clasico = new javax.swing.JRadioButton();
        b_cargado = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        t_z_c_bandera = new javax.swing.JTextField();
        t_z_direccion = new javax.swing.JTextField();
        b_crear_zombie = new javax.swing.JButton();

        Imprimir.setText("Imprimir");
        Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirActionPerformed(evt);
            }
        });
        popup.add(Imprimir);

        Eliminar.setText("Eliminar");
        popup.add(Eliminar);

        Elegir.setText("Elegir");
        Elegir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ElegirActionPerformed(evt);
            }
        });
        popup.add(Elegir);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        arbol.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        arbol.setComponentPopupMenu(popup);
        arbol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arbolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(arbol);

        batalla.setColumns(20);
        batalla.setRows(5);
        jScrollPane2.setViewportView(batalla);

        b_testear.setText("Testear");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addComponent(b_testear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(t_planta)
                    .addComponent(t_zombie))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(t_planta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t_zombie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_testear))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Test", jPanel1);

        jLabel1.setText("Rango");

        jLabel2.setText("Tipo");

        grupo_rango.add(b_bajo);
        b_bajo.setText("Bajo");

        grupo_rango.add(b_medio);
        b_medio.setText("Medio");

        grupo_rango.add(b_alto);
        b_alto.setText("Alto");

        grupo_tipo_planta.add(b_explosiva);
        b_explosiva.setText("Explosiva");

        grupo_tipo_planta.add(b_disparo);
        b_disparo.setText("Disparo");

        grupo_tipo_planta.add(b_defensa);
        b_defensa.setText("Defensa");

        jLabel3.setText("Nombre");

        jLabel4.setText("Ataque");

        jLabel5.setText("Vida");

        jLabel6.setText("Magnitud de explosion");

        jLabel7.setText("Altura");

        jLabel8.setText("Nombre proyectil");

        jLabel9.setText("Peso");

        jLabel10.setText("Color");

        jLabel11.setText("Dureza");

        t_p_n_proyectil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_p_n_proyectilActionPerformed(evt);
            }
        });

        b_crear_planta.setText("Crear");
        b_crear_planta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_crear_plantaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(b_bajo)
                            .addComponent(b_medio)
                            .addComponent(b_alto))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(b_disparo)
                            .addComponent(b_defensa)
                            .addComponent(b_explosiva))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(t_p_nombre)
                            .addComponent(s_p_vida, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(s_p_ataque)
                            .addComponent(b_crear_planta, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(s_p_altura, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(s_p_magnitud, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel7))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(t_p_n_proyectil)
                            .addComponent(s_p_peso, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(t_p_color)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(s_p_dureza, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_bajo)
                        .addComponent(b_explosiva))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(t_p_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(s_p_ataque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_medio)
                    .addComponent(b_disparo)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(b_alto)
                        .addComponent(b_defensa))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(s_p_vida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(b_crear_planta)))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s_p_magnitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_p_n_proyectil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_p_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s_p_altura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s_p_peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s_p_dureza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Plantas", jPanel2);

        jLabel12.setText("Nombre");

        jLabel13.setText("Edad");

        jLabel14.setText("Enojo");

        jLabel15.setText("Ataque");

        jLabel16.setText("Tamaño");

        jLabel17.setText("Vida");

        jLabel18.setText("Años de experiencia");

        jLabel19.setText("Agregar persona comida");

        b_mas.setText("+");
        b_mas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_masMouseClicked(evt);
            }
        });

        jScrollPane3.setViewportView(lista_personas);

        jLabel20.setText("Tipo");

        grupo_tipo_zombie.add(b_clasico);
        b_clasico.setText("Clasico");
        b_clasico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_clasicoActionPerformed(evt);
            }
        });

        grupo_tipo_zombie.add(b_cargado);
        b_cargado.setText("Cargado");

        jLabel21.setText("Color Bandera");

        jLabel22.setText("Direccion imagen");

        b_crear_zombie.setText("Crear");
        b_crear_zombie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_crear_zombieMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(s_z_vida, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(s_z_ataque, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(t_z_nombre)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING))
                        .addComponent(jLabel17))
                    .addComponent(jLabel20)
                    .addComponent(b_cargado)
                    .addComponent(b_clasico)
                    .addComponent(b_crear_zombie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(110, 110, 110))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(s_z_edad)
                            .addGap(28, 28, 28)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel22)
                                .addComponent(jLabel21)
                                .addComponent(jLabel16)
                                .addComponent(s_z_tamano)
                                .addComponent(s_z_experiencia)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(t_z_c_bandera))
                            .addComponent(t_z_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(s_z_enojo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(t_z_persona, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(b_mas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t_z_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s_z_edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s_z_enojo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(s_z_ataque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(s_z_tamano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t_z_persona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_mas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(s_z_vida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(s_z_experiencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_clasico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(b_cargado))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(t_z_c_bandera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel22)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b_crear_zombie)
                            .addComponent(t_z_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Zombies", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_p_n_proyectilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_p_n_proyectilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_t_p_n_proyectilActionPerformed

    private void b_clasicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_clasicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_b_clasicoActionPerformed

    private void b_crear_plantaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_crear_plantaMouseClicked
        Plantas planta = new Plantas();
        
        String tipo = "";
        if(b_explosiva.isSelected()){
            tipo = "Explosiva";
        }else if(b_disparo.isSelected()){
            tipo = "Disparo";
        }else{
            tipo = "Defensa";
        }
        String rango = "";
        if(b_alto.isSelected()){
            rango = "Alto";
        }else if(b_medio.isSelected()){
            rango = "Medio";
        }else{
            rango = "Bajo";
        }
        
        String nombre = t_p_nombre.getText();
        int ataque = (Integer) s_p_ataque.getValue();
        int vida = (Integer) s_p_vida.getValue();
        
        
        if(tipo.equals("Explsiva")){
            int explosion = (Integer) s_p_magnitud.getValue();
            planta = new Plantas(tipo, nombre, ataque, vida, rango, explosion);
        }else if(tipo.equals("Disparo")){
            String proyectil = t_p_n_proyectil.getText();
            String color = t_p_color.getText();
            planta = new Plantas(tipo, nombre, ataque, vida, rango, proyectil, color);
        }else{
            int altura = (Integer) s_p_altura.getValue();
            int peso = (Integer) s_p_peso.getValue();
            int dureza = (Integer) s_p_dureza.getValue();
            planta = new Plantas(tipo, nombre, ataque, vida, rango, altura, peso, dureza);
        }
        
        t_p_nombre.setText("");
        s_p_ataque.setValue(0);
        s_p_vida.setValue(0);
        s_p_magnitud.setValue(0);
        s_p_altura.setValue(0);
        s_p_dureza.setValue(0);
        s_p_peso.setValue(0);
        t_p_n_proyectil.setText("");
        t_p_color.setText("");
        
        
        System.out.println("Lista de plantas: ");
        Administrador ap = new Administrador("./Plantas.txt");        
        ap.cargarArchivoPlantas();
        
        try {
            metodoarbol();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            escribirArchivoPlanta(planta);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_b_crear_plantaMouseClicked

    private void b_crear_zombieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_crear_zombieMouseClicked
        Zombies zombie = new Zombies();
        
        String tipo = "";
        if(b_clasico.isSelected()){
            tipo = "Clasico";
        }else{
            tipo = "Cargado";
        }
        String nombre = t_z_nombre.getText();
        int ataque = (Integer) s_z_ataque.getValue();
        int vida = (Integer) s_z_vida.getValue();
        
        if(tipo.equals("Clasico")){
            int experienia = (Integer) s_z_experiencia.getValue();
            String bandera = t_z_c_bandera.getText();
            String direccion = t_z_direccion.getText();
            zombie = new Zombies(tipo, nombre, ataque, vida, experienia, bandera, direccion);
        }else{
            int tamano = (Integer) s_z_tamano.getValue();
            int edad = (Integer) s_z_edad.getValue();
            int enojo = (Integer) s_z_enojo.getValue();
            String personas = "{";
            
            int num = modelopersonas.size();
            for (int i = 0; i < num; i++) {
                String persona = (String) modelopersonas.getElementAt(i);
                personas += persona+",";
            }
            personas += "}";
            zombie = new Zombies(tipo, nombre, ataque, vida, tamano, edad, enojo, personas);
        }
        
        t_z_nombre.setText("");
        s_z_edad.setValue(0);
        s_z_enojo.setValue(0);
        s_z_ataque.setValue(0);
        s_z_tamano.setValue(0);
        s_z_vida.setValue(0);
        s_z_experiencia.setValue(0);
        t_z_c_bandera.setText("");
        t_z_direccion.setText("");
        modelopersonas = new DefaultListModel();
        lista_personas.setModel(modelopersonas);
    }//GEN-LAST:event_b_crear_zombieMouseClicked

    private void b_masMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_masMouseClicked
        
        String persona = t_z_persona.getText();
        modelopersonas.addElement(persona);
        lista_personas.setModel(modelopersonas);
        t_z_persona.setText("");
    }//GEN-LAST:event_b_masMouseClicked

    private void arbolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arbolMouseClicked
        
    }//GEN-LAST:event_arbolMouseClicked

    private void ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ImprimirActionPerformed

    private void ElegirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElegirActionPerformed

        String entidad = "";
        System.out.println(entidad);
    }//GEN-LAST:event_ElegirActionPerformed

    public void metodoarbol() throws FileNotFoundException{
        File archivo1 = null;
        archivo1 = new File("./Plantas.txt");
        File archivo2 = null;
        archivo2 = new File("./Zombies2.txt");
        
        Scanner sc = null;
        Scanner sc2 = null;
        Scanner sc3 = null;
        Scanner sc4 = null;
        Scanner sc5 = null;
        
        DefaultMutableTreeNode entidades = new DefaultMutableTreeNode(
                        "Entidades");
        DefaultMutableTreeNode plantas = new DefaultMutableTreeNode(
                        "PLantas");
        DefaultMutableTreeNode zombies = new DefaultMutableTreeNode(
                        "Zombies");
        
        DefaultMutableTreeNode disparo = new DefaultMutableTreeNode(
                        "Disparo");
        DefaultMutableTreeNode defensa = new DefaultMutableTreeNode(
                        "Defensa");
        DefaultMutableTreeNode explosiva = new DefaultMutableTreeNode(
                        "Explosiva");
        
        DefaultMutableTreeNode bajo = new DefaultMutableTreeNode(
                        "Bajo");
        DefaultMutableTreeNode medio = new DefaultMutableTreeNode(
                        "Medio");
        DefaultMutableTreeNode alto = new DefaultMutableTreeNode(
                        "Alto");
        
        
        DefaultMutableTreeNode bajo2 = new DefaultMutableTreeNode(
                        "Bajo");
        DefaultMutableTreeNode medio2 = new DefaultMutableTreeNode(
                        "Medio");
        DefaultMutableTreeNode alto2 = new DefaultMutableTreeNode(
                        "Alto");
        
        
        DefaultMutableTreeNode bajo3 = new DefaultMutableTreeNode(
                        "Bajo");
        DefaultMutableTreeNode medio3 = new DefaultMutableTreeNode(
                        "Medio");
        DefaultMutableTreeNode alto3 = new DefaultMutableTreeNode(
                        "Alto");
        
        DefaultMutableTreeNode clasico = new DefaultMutableTreeNode(
                        "Clasico");
        DefaultMutableTreeNode cargado = new DefaultMutableTreeNode(
                        "Cargado");
        
        // plantas
        String rango = "";
        String nombre = "";
        String vida = "";
        String ataque = "";
        
        String proyectil = "";
        String color = "";
        
        String peso = "";
        String altura = "";
        String dureza = "";
        
        String magnitud = "";
        
        if (archivo1.exists()) {
            try {
                sc = new Scanner(archivo1);
                sc.useDelimiter("/");
                
                while (sc.hasNext()) {
                    String tipo = "";
                    
                    String planta = sc.next();
                    System.out.println(planta);
                    
                    sc2 = new Scanner(planta);
                    sc2.useDelimiter("_");
                    
                    while (sc2.hasNext()){
                        String d_planta = sc2.next();
                        sc5 = new Scanner(d_planta);
                        sc5.useDelimiter(",");
                        
                        while (sc5.hasNext()){
                            String cadena = sc5.next();
                            if(cadena.charAt(0) == 'R'){
                                rango = cadena;
                            }else if(cadena.charAt(0) == 'V'){
                                vida = cadena;
                            }else if(cadena.charAt(0) == 'A'){
                                ataque = cadena;
                            }else if(cadena.charAt(0) == 'N'){
                                nombre = cadena;
                            }
                        }
                    }
                    
                    sc2 = new Scanner(planta);
                    sc2.useDelimiter("_");
                    
                    while (sc2.hasNext()){
                        String d_planta = sc2.next();
                        System.out.print("        ");
                        System.out.println(d_planta);
                        
                        sc3 = new Scanner(d_planta);
                        sc3.useDelimiter(":");
                        
                        
                        
                        
                        while (sc3.hasNext()){
                            String cadena = sc3.next();
                            
                            
                            
                            if (cadena.equals("Disparo")){
                                System.out.print("                ");
                                System.out.println(cadena);
                                sc3.hasNext();
                                cadena = sc3.next();
                                cadena = cadena.substring(1, cadena.length()-1);
                                System.out.print("                        ");
                                System.out.println(cadena);
                                sc4 = new Scanner(cadena);
                                sc4.useDelimiter(";");
                                while(sc4.hasNext()){
                                    String cadena2 = sc4.next();
                                    if(cadena2.charAt(0) == 'P'){
                                        proyectil = cadena2;
                                        System.out.println(proyectil);
                                    }else{
                                        color = cadena2;
                                        System.out.println(color);
                                    }
                                }
                                String cadenaplanta = "Planta{"+nombre+","+rango+","+vida+","+ataque+","+proyectil+","+color;
                                DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(
                                                            cadenaplanta);
                                
                                if(rango.equals("Rango=Bajo")){
                                    bajo.add(nodo);
                                }else if(rango.equals("Rango=Medio")){
                                    medio.add(nodo);
                                }else{
                                    alto.add(nodo);
                                }
                                
                            }else if (cadena.equals("Defensa")){
                                System.out.print("                ");
                                System.out.println(cadena);
                                sc3.hasNext();
                                cadena = sc3.next();
                                cadena = cadena.substring(1, cadena.length()-1);
                                System.out.print("                        ");
                                System.out.println(cadena);
                                sc4 = new Scanner(cadena);
                                sc4.useDelimiter(";");
                                while(sc4.hasNext()){
                                    String cadena2 = sc4.next();
                                    if(cadena2.charAt(0) == 'P'){
                                        peso = cadena2;
                                        System.out.println(peso);
                                    }else if(cadena2.charAt(0) == 'A'){
                                        altura = cadena2;
                                        System.out.println(altura);
                                    }else{
                                        dureza = cadena2;
                                        System.out.println(dureza);
                                    }
                                }
                                String cadenaplanta = "Planta{"+nombre+","+rango+","+vida+","+ataque+","+peso+","+altura+","+dureza;
                                DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(
                                                            cadenaplanta);
                                
                                if(rango.equals("Rango=Bajo")){
                                    bajo2.add(nodo);
                                }else if(rango.equals("Rango=Medio")){
                                    medio2.add(nodo);
                                }else{
                                    alto2.add(nodo);
                                }
                                
                            }else if (cadena.equals("Explosiva")){
                                System.out.print("                ");
                                System.out.println(cadena);
                                sc3.hasNext();
                                cadena = sc3.next();
                                cadena = cadena.substring(1, cadena.length()-1);
                                System.out.print("                        ");
                                System.out.println(cadena);
                                sc4 = new Scanner(cadena);
                                sc4.useDelimiter(";");
                                magnitud = cadena;
                                System.out.println(magnitud);
                                
                                String cadenaplanta = "Planta{"+nombre+","+rango+","+vida+","+ataque+","+magnitud;
                                DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(
                                                            cadenaplanta);
                                
                                if(rango.equals("Rango=Bajo")){
                                    bajo3.add(nodo);
                                }else if(rango.equals("Rango=Medio")){
                                    medio3.add(nodo);
                                }else{
                                    alto3.add(nodo);
                                }
                            }else{
                                
                            }
                        }
                    }
                }
            }catch(Exception e){
                
            }
        }//fin plantas
        
        
        
        
        //zombies
        String nombre_z = "";
        String vida_z = "";
        String ataque_z = "";
        
        String bandera = "";
        String experiencia = "";
        
        String enojo = "";
        String edad = "";
        String personas = "";
        
        
        if (archivo2.exists()) {
            try {
                sc = new Scanner(archivo2);
                sc.useDelimiter("/");
                
                while (sc.hasNext()) {
                    String tipo = "";
                    
                    String planta = sc.next();
                    System.out.println(planta);
                    
                    sc2 = new Scanner(planta);
                    sc2.useDelimiter("_");
                    
                    while (sc2.hasNext()){
                        String d_planta = sc2.next();
                        sc5 = new Scanner(d_planta);
                        sc5.useDelimiter(",");
                        
                        while (sc5.hasNext()){
                            String cadena = sc5.next();
                            if(cadena.charAt(0) == 'V'){
                                vida_z = cadena;
                            }else if(cadena.charAt(0) == 'A'){
                                ataque_z = cadena;
                            }else if(cadena.charAt(0) == 'N'){
                                nombre_z = cadena;
                            }
                        }
                    }
                    
                    sc2 = new Scanner(planta);
                    sc2.useDelimiter("_");
                    
                    while (sc2.hasNext()){
                        String d_planta = sc2.next();
                        System.out.print("        ");
                        System.out.println(d_planta);
                        
                        sc3 = new Scanner(d_planta);
                        sc3.useDelimiter(":");
                        
                        
                        
                        
                        while (sc3.hasNext()){
                            String cadena = sc3.next();
                            
                            
                            
                            if (cadena.equals("Clasico")){
                                System.out.print("                ");
                                System.out.println(cadena);
                                sc3.hasNext();
                                cadena = sc3.next();
                                cadena = cadena.substring(1, cadena.length()-1);
                                System.out.print("                        ");
                                System.out.println(cadena);
                                sc4 = new Scanner(cadena);
                                sc4.useDelimiter(";");
                                while(sc4.hasNext()){
                                    String cadena2 = sc4.next();
                                    if(cadena2.charAt(0) == 'B'){
                                        bandera = cadena2;
                                    }else{
                                        experiencia = cadena2;
                                    }
                                }
                                String cadenazombie = "Zombie{"+nombre_z+","+vida_z+","+ataque_z+","+bandera+","+experiencia;
                                DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(
                                                            cadenazombie);
                                
                                clasico.add(nodo);
                                
                            }else if (cadena.equals("Cargado")){
                                System.out.print("                ");
                                System.out.println(cadena);
                                sc3.hasNext();
                                cadena = sc3.next();
                                cadena = cadena.substring(1, cadena.length()-1);
                                System.out.print("                        ");
                                System.out.println(cadena);
                                sc4 = new Scanner(cadena);
                                sc4.useDelimiter(";");
                                while(sc4.hasNext()){
                                    String cadena2 = sc4.next();
                                    if(cadena2.charAt(0) == 'E' && cadena2.charAt(0) == 'n'){
                                        enojo = cadena2;
                                    }else if(cadena2.charAt(0) == 'E'){
                                        edad = cadena2;
                                    }else{
                                        personas = cadena2;
                                    }
                                }
                                String cadenazombie = "Zombie{"+nombre_z+vida+","+ataque_z+","+enojo+","+edad+","+personas;
                                DefaultMutableTreeNode nodo = new DefaultMutableTreeNode(
                                                            cadenazombie);
                                
                                cargado.add(nodo);
                                
                            }else{
                                
                            }
                        }
                    }
                }
            }catch(Exception e){
                
            }
        }//fin zombies
        
        disparo.add(bajo);
        disparo.add(medio);
        disparo.add(alto);
        
        defensa.add(bajo2);
        defensa.add(medio2);
        defensa.add(alto2);
        
        explosiva.add(bajo3);
        explosiva.add(medio3);
        explosiva.add(alto3);
        
        plantas.add(disparo);
        plantas.add(defensa);
        plantas.add(explosiva);
        
        zombies.add(clasico);
        zombies.add(cargado);
        
        entidades.add(plantas);
        entidades.add(zombies);
        DefaultTreeModel m = (DefaultTreeModel) arbol.getModel();
        m.setRoot(entidades);
    }
    
    public void escribirArchivoPlanta(Plantas planta) throws IOException {
        FileWriter fw = null;
        BufferedWriter bw = null;
        try {
            fw = new FileWriter(archivop, true);
            bw = new BufferedWriter(fw);
            Administrador2("./Plantas.txt");
            Scanner cadena = new Scanner(archivop);
            String cadena2 = cadena.next();
            System.out.println(cadena2);
            
            bw.write(planta.toString());
                
            bw.flush();
        } catch (Exception ex) {
        }
        bw.close();
        fw.close();
    }
    public void Administrador2(String path) {
        archivop = new File(path);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Elegir;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JMenuItem Imprimir;
    private javax.swing.JTree arbol;
    private javax.swing.JRadioButton b_alto;
    private javax.swing.JRadioButton b_bajo;
    private javax.swing.JRadioButton b_cargado;
    private javax.swing.JRadioButton b_clasico;
    private javax.swing.JButton b_crear_planta;
    private javax.swing.JButton b_crear_zombie;
    private javax.swing.JRadioButton b_defensa;
    private javax.swing.JRadioButton b_disparo;
    private javax.swing.JRadioButton b_explosiva;
    private javax.swing.JButton b_mas;
    private javax.swing.JRadioButton b_medio;
    private javax.swing.JButton b_testear;
    private javax.swing.JTextArea batalla;
    private javax.swing.ButtonGroup grupo_rango;
    private javax.swing.ButtonGroup grupo_tipo_planta;
    private javax.swing.ButtonGroup grupo_tipo_zombie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> lista_personas;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JSpinner s_p_altura;
    private javax.swing.JSpinner s_p_ataque;
    private javax.swing.JSpinner s_p_dureza;
    private javax.swing.JSpinner s_p_magnitud;
    private javax.swing.JSpinner s_p_peso;
    private javax.swing.JSpinner s_p_vida;
    private javax.swing.JSpinner s_z_ataque;
    private javax.swing.JSpinner s_z_edad;
    private javax.swing.JSpinner s_z_enojo;
    private javax.swing.JSpinner s_z_experiencia;
    private javax.swing.JSpinner s_z_tamano;
    private javax.swing.JSpinner s_z_vida;
    private javax.swing.JTextField t_p_color;
    private javax.swing.JTextField t_p_n_proyectil;
    private javax.swing.JTextField t_p_nombre;
    private javax.swing.JTextField t_planta;
    private javax.swing.JTextField t_z_c_bandera;
    private javax.swing.JTextField t_z_direccion;
    private javax.swing.JTextField t_z_nombre;
    private javax.swing.JTextField t_z_persona;
    private javax.swing.JTextField t_zombie;
    // End of variables declaration//GEN-END:variables
}
